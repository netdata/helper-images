---
# Builds our base and builder Docker iamges that it used to build the Production Docker Image(s)
name: Base Builder
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    brnaches:
      - 'master'
  pull_request:
jobs:
  build:
    name: Build
    if: github.event_name == 'pull_request' || github.event_name == 'push' || (github.event_name == 'schedule' && github.repository == 'netdata/helper-images')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - base
          - builder
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check if we should push images
        if: (github.event_name == 'schedule' || github.event_name == 'push')
        run: echo 'PUSH_IMAGES=true' >> $GITHUB_ENV
      - name: Check if we should push images
        if: github.event_name == 'pull_request'
        run: echo 'PUSH_IMAGES=false' >> $GITHUB_ENV
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker Hub Login
        if: env.PUSH_IMAGES == 'true'
        uses: docker/login-action@v1
        with:
          username: netdatabot
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare Cache
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.image }}
      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/i386,linux/arm/v7,linux/arm64
          push: ${{ env.PUSH_IMAGES }}
          file: ./${{ matrix.image }}/Dockerfile
          tags: |
            netdata/${{ matrix.image }}:amd64
            netdata/${{ matrix.image }}:i386
            netdata/${{ matrix.image }}:armhf
            netdata/${{ matrix.image }}:aarch64
            netdata/${{ matrix.image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Cleanup Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
